//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ConsoleApplication1.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService")]
    public interface IService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/KeyBoardHandler", ReplyAction="http://tempuri.org/IService/KeyBoardHandlerResponse")]
        void KeyBoardHandler(int rawPackets);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/KeyBoardHandler", ReplyAction="http://tempuri.org/IService/KeyBoardHandlerResponse")]
        System.Threading.Tasks.Task KeyBoardHandlerAsync(int rawPackets);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/StartClient", ReplyAction="http://tempuri.org/IService/StartClientResponse")]
        void StartClient(int rawPackets);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/StartClient", ReplyAction="http://tempuri.org/IService/StartClientResponse")]
        System.Threading.Tasks.Task StartClientAsync(int rawPackets);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MouseCoords", ReplyAction="http://tempuri.org/IService/MouseCoordsResponse")]
        void MouseCoords(int[] rawPackets);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MouseCoords", ReplyAction="http://tempuri.org/IService/MouseCoordsResponse")]
        System.Threading.Tasks.Task MouseCoordsAsync(int[] rawPackets);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MouseEvents", ReplyAction="http://tempuri.org/IService/MouseEventsResponse")]
        void MouseEvents(int rawPackets);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MouseEvents", ReplyAction="http://tempuri.org/IService/MouseEventsResponse")]
        System.Threading.Tasks.Task MouseEventsAsync(int rawPackets);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetByteArray", ReplyAction="http://tempuri.org/IService/GetByteArrayResponse")]
        byte[] GetByteArray();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetByteArray", ReplyAction="http://tempuri.org/IService/GetByteArrayResponse")]
        System.Threading.Tasks.Task<byte[]> GetByteArrayAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SetData", ReplyAction="http://tempuri.org/IService/SetDataResponse")]
        void SetData(byte[] capture);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SetData", ReplyAction="http://tempuri.org/IService/SetDataResponse")]
        System.Threading.Tasks.Task SetDataAsync(byte[] capture);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetKeyBordEvent", ReplyAction="http://tempuri.org/IService/GetKeyBordEventResponse")]
        System.Nullable<int> GetKeyBordEvent();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetKeyBordEvent", ReplyAction="http://tempuri.org/IService/GetKeyBordEventResponse")]
        System.Threading.Tasks.Task<System.Nullable<int>> GetKeyBordEventAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetStartEvent", ReplyAction="http://tempuri.org/IService/GetStartEventResponse")]
        System.Nullable<int> GetStartEvent();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetStartEvent", ReplyAction="http://tempuri.org/IService/GetStartEventResponse")]
        System.Threading.Tasks.Task<System.Nullable<int>> GetStartEventAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetMouseCoords", ReplyAction="http://tempuri.org/IService/GetMouseCoordsResponse")]
        int[] GetMouseCoords();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetMouseCoords", ReplyAction="http://tempuri.org/IService/GetMouseCoordsResponse")]
        System.Threading.Tasks.Task<int[]> GetMouseCoordsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetMouseEvents", ReplyAction="http://tempuri.org/IService/GetMouseEventsResponse")]
        System.Nullable<int> GetMouseEvents();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetMouseEvents", ReplyAction="http://tempuri.org/IService/GetMouseEventsResponse")]
        System.Threading.Tasks.Task<System.Nullable<int>> GetMouseEventsAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceChannel : ConsoleApplication1.ServiceReference1.IService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceClient : System.ServiceModel.ClientBase<ConsoleApplication1.ServiceReference1.IService>, ConsoleApplication1.ServiceReference1.IService {
        
        public ServiceClient() {
        }
        
        public ServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void KeyBoardHandler(int rawPackets) {
            base.Channel.KeyBoardHandler(rawPackets);
        }
        
        public System.Threading.Tasks.Task KeyBoardHandlerAsync(int rawPackets) {
            return base.Channel.KeyBoardHandlerAsync(rawPackets);
        }
        
        public void StartClient(int rawPackets) {
            base.Channel.StartClient(rawPackets);
        }
        
        public System.Threading.Tasks.Task StartClientAsync(int rawPackets) {
            return base.Channel.StartClientAsync(rawPackets);
        }
        
        public void MouseCoords(int[] rawPackets) {
            base.Channel.MouseCoords(rawPackets);
        }
        
        public System.Threading.Tasks.Task MouseCoordsAsync(int[] rawPackets) {
            return base.Channel.MouseCoordsAsync(rawPackets);
        }
        
        public void MouseEvents(int rawPackets) {
            base.Channel.MouseEvents(rawPackets);
        }
        
        public System.Threading.Tasks.Task MouseEventsAsync(int rawPackets) {
            return base.Channel.MouseEventsAsync(rawPackets);
        }
        
        public byte[] GetByteArray() {
            return base.Channel.GetByteArray();
        }
        
        public System.Threading.Tasks.Task<byte[]> GetByteArrayAsync() {
            return base.Channel.GetByteArrayAsync();
        }
        
        public void SetData(byte[] capture) {
            base.Channel.SetData(capture);
        }
        
        public System.Threading.Tasks.Task SetDataAsync(byte[] capture) {
            return base.Channel.SetDataAsync(capture);
        }
        
        public System.Nullable<int> GetKeyBordEvent() {
            return base.Channel.GetKeyBordEvent();
        }
        
        public System.Threading.Tasks.Task<System.Nullable<int>> GetKeyBordEventAsync() {
            return base.Channel.GetKeyBordEventAsync();
        }
        
        public System.Nullable<int> GetStartEvent() {
            return base.Channel.GetStartEvent();
        }
        
        public System.Threading.Tasks.Task<System.Nullable<int>> GetStartEventAsync() {
            return base.Channel.GetStartEventAsync();
        }
        
        public int[] GetMouseCoords() {
            return base.Channel.GetMouseCoords();
        }
        
        public System.Threading.Tasks.Task<int[]> GetMouseCoordsAsync() {
            return base.Channel.GetMouseCoordsAsync();
        }
        
        public System.Nullable<int> GetMouseEvents() {
            return base.Channel.GetMouseEvents();
        }
        
        public System.Threading.Tasks.Task<System.Nullable<int>> GetMouseEventsAsync() {
            return base.Channel.GetMouseEventsAsync();
        }
    }
}
